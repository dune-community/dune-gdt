# THIS FILE IS AUTOGENERATED -- DO NOT EDIT       #
# Edit and Re-run .ci/gitlab/config_template.py instead  #
stages:
  - sanity
  - images
  - cpp
  - headercheck
  - python

variables:
    GIT_SUBMODULE_STRATEGY: recursive
    TRAVIS_BRANCH: ${CI_COMMIT_REF_NAME}
    TRAVIS_COMMIT: ${CI_COMMIT_SHA}
    CCACHE_BASEDIR: ${CI_PROJECT_DIR}
    CCACHE_DIR: "${CI_PROJECT_DIR}/.ccache"
    CCACHE_COMPILERCHECK: content
    CCACHE_COMPRESS: "true"
    PYTEST_ADDOPTS: "-s"
    MY_MODULE: dune-gdt
    BASE_PROJECT: zivgitlab.wwu.io/ag-ohlberger/dune-community/dune-gdt-super

.image_builder:
    tags:
      - docker-in-docker
      - long execution time
    stage: images
    rules:
        - if: '$CI_COMMIT_REF_NAME =~ /^staging.*/'
          when: never
        - when: on_success
    retry:
        max: 2
        when:
            - always
    image: harbor.uni-muenster.de/proxy-docker/library/docker:19.03.12
    variables:
        DOCKER_HOST: tcp://docker:2375/
        DOCKER_DRIVER: overlay2
        IMAGE: ${CI_REGISTRY_IMAGE}/ci_testing_${CI_IMAGE}:${CI_COMMIT_SHORT_SHA}
    before_script:
      - |
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        apk --update add py3-pip openssh-client rsync git file bash python3 curl
        pip3 install -U docker jinja2 docopt

        export BASEIMAGE="${MY_MODULE}-testing_${CI_IMAGE}:${CI_COMMIT_REF_NAME/\//_}"
        # get image with fallback to master branch of the super repo
        docker pull ${BASE_PROJECT}/${BASEIMAGE} || export BASEIMAGE="${MY_MODULE}-testing_${CI_IMAGE}:master"
        docker pull ${BASE_PROJECT}/${BASEIMAGE}
    script:
      - |
        git submodule update --init --recursive
        docker build --build-arg BASE=${BASEIMAGE} -t ${IMAGE} -f .ci/gitlab/Dockerfile .
        docker push ${IMAGE}
    services:
        - name: harbor.uni-muenster.de/proxy-docker/library/docker:dind
          alias: docker
    environment:
        name: unsafe

.subdir-test:
    tags:
      - long execution time
    stage: test
    rules:
        - if: '$CI_COMMIT_REF_NAME =~ /^staging.*/'
          when: never
        - when: on_success
    retry:
        max: 2
        when:
            - always
    image: ${CI_REGISTRY_IMAGE}/ci_testing_${CI_IMAGE}:${CI_COMMIT_SHORT_SHA}
    cache:
      key: "$CI_JOB_NAME"
      paths:
        - .ccache
    before_script:
      - |
        mkdir /home/dune-ci/testresults && chmod -R 777 /home/dune-ci/testresults
        [[ -f ./.gitsuper ]] && echo "Please remove .gitsuper from the repo" && exit 1
        ccache --zero-stats || true
    after_script:
      - ccache --show-stats
    artifacts:
      reports:
        junit: '/home/dune-ci/testresults/*xml'
    environment:
        name: unsafe

.pre-commit:
    stage: sanity
    image: "python:3.9"
    cache:
      paths:
        - ${CI_PROJECT_DIR}/.cache/pre-commit
    variables:
        PRECOMMIT: "pre-commit run --all"
    before_script:
        - pip install pre-commit
        - pre-commit install --install-hooks

format_check:
    extends: .pre-commit
    script:
        - ${PRECOMMIT} clang-format
        - ${PRECOMMIT} yapf
        - ${PRECOMMIT} trailing-whitespace

lint:
    extends: .pre-commit
    script:
        - ${PRECOMMIT} check-added-large-files
        #- ${PRECOMMIT} flake8 disabled for now, finds lots of issue
        - ${PRECOMMIT} debug-statements
        - ${PRECOMMIT} check-yaml


debian-unstable_gcc_full:
    extends: .image_builder
    variables:
        CI_IMAGE: debian-unstable_gcc_full
debian_gcc_full:
    extends: .image_builder
    variables:
        CI_IMAGE: debian_gcc_full
debian_clang_full:
    extends: .image_builder
    variables:
        CI_IMAGE: debian_clang_full



gdt unstable_gcc_full cpp:
    extends: .subdir-test
    variables:
        CI_IMAGE: debian-unstable_gcc_full
        TESTS_MODULE_SUBDIR: gdt
    tags:
        - dustin
    stage: cpp
    needs: ["debian-unstable_gcc_full"]
    script:
          - /home/dune-ci/src/${MY_MODULE}/.ci/shared/scripts/test_cpp.bash

gdt unstable_gcc_full headercheck:
    extends: .subdir-test
    variables:
        CI_IMAGE: debian-unstable_gcc_full
        TESTS_MODULE_SUBDIR: gdt
    tags:
        - dustin
    stage: headercheck
    needs: ["debian-unstable_gcc_full"]
    script:
          - /home/dune-ci/src/${MY_MODULE}/.ci/shared/scripts/test_headercheck.bash

gdt gcc_full cpp:
    extends: .subdir-test
    variables:
        CI_IMAGE: debian_gcc_full
        TESTS_MODULE_SUBDIR: gdt
    tags:
        - dustin
    stage: cpp
    needs: ["debian_gcc_full"]
    script:
          - /home/dune-ci/src/${MY_MODULE}/.ci/shared/scripts/test_cpp.bash

gdt gcc_full headercheck:
    extends: .subdir-test
    variables:
        CI_IMAGE: debian_gcc_full
        TESTS_MODULE_SUBDIR: gdt
    tags:
        - dustin
    stage: headercheck
    needs: ["debian_gcc_full"]
    script:
          - /home/dune-ci/src/${MY_MODULE}/.ci/shared/scripts/test_headercheck.bash

gdt clang_full cpp:
    extends: .subdir-test
    variables:
        CI_IMAGE: debian_clang_full
        TESTS_MODULE_SUBDIR: gdt
    tags:
        - dustin
    stage: cpp
    needs: ["debian_clang_full"]
    script:
          - /home/dune-ci/src/${MY_MODULE}/.ci/shared/scripts/test_cpp.bash

gdt clang_full headercheck:
    extends: .subdir-test
    variables:
        CI_IMAGE: debian_clang_full
        TESTS_MODULE_SUBDIR: gdt
    tags:
        - dustin
    stage: headercheck
    needs: ["debian_clang_full"]
    script:
          - /home/dune-ci/src/${MY_MODULE}/.ci/shared/scripts/test_headercheck.bash



unstable_gcc_full python:
    extends: .subdir-test
    variables:
        CI_IMAGE: debian-unstable_gcc_full
    tags:
        - dustin
    stage: python
    needs: ["debian-unstable_gcc_full"]
    script:
          - /home/dune-ci/src/${MY_MODULE}/.ci/shared/scripts/test_python.bash

gcc_full python:
    extends: .subdir-test
    variables:
        CI_IMAGE: debian_gcc_full
    tags:
        - dustin
    stage: python
    needs: ["debian_gcc_full"]
    script:
          - /home/dune-ci/src/${MY_MODULE}/.ci/shared/scripts/test_python.bash

clang_full python:
    extends: .subdir-test
    variables:
        CI_IMAGE: debian_clang_full
    tags:
        - amm-only
    stage: python
    needs: ["debian_clang_full"]
    script:
          - /home/dune-ci/src/${MY_MODULE}/.ci/shared/scripts/test_python.bash

